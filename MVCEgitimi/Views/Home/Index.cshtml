@{ //c#kodu yazığımızı anlaması için
    ViewData["Title"] = "Anasayfa";
}

@*html direkt yazabiliriz*@
<div >
    <h1 class="display-4 text-center">Hoş Geldiniz</h1>
    <br>
    <p style="text-align : center; text-size : 14px" class ="text-bg-secondary">
        MVC Nedir ? Mvc'nin Çalışma Prensibi Nasıldır ?</p>
    <br>
    <p>
        MVC, Yazılım Mühendisliği'nde önemli bir yere sahip architectural patterns (yazılım mimari desenleri)'ın bir parçasıdır. Model, View ve Controller kelimelerinin baş harflerinden oluşan MVC (Model-View-Controller), 1979 yılında Tygve Reeskaug tarafından oluşturulmuş ve yazılım geliştirme bir çok projede kullanılmıştır. 10 Aralık 2007'de Microsoft'un MVC desenini Asp.Net teknolojisi ile birleştirilmesi ile popülaritesi daha da artmıştır. 
    </p>
    <p>
        MVC ile ilgili en yanlış bilgi, MVC'nin Microsoft tarafından çıkartıldığı düşüncesidir. MVC'nin Asp.Net'e entegre edilmesinden önce bu deseni bir çok (.Net) yazılım geliştiricisi bilmemekteydi, bilsede kullanmıyorlardı. Asp.Net MVC'nin gelişiminin ardından MVC'ye ilgi oldukça artmış durumda.
    </p>
    <p>
        MVC deseni, 3 katmandan oluşmaktadır ve katmanları birbirinden bağımsız (birbirini etkilemeden) olarak çalışmaktadır. Bu sebeple çoğunlukla büyük çaplı projelerde projelerin yönetiminin ve kontrolünün daha rahat sağlanabilmesi için tercih edilmektedir. MVC ile geliştirilen projelerde projenin detaylarına göre bir çok kişi eş zamanlı olarak kolaylıkla çalışabilmektedir.
    </p>
</div>
<br>

<div style="text-align : center;">
    <h2 class="text-center">MVC Şeması</h2>
    <br>
    <a>
        <img src="/css/mvcnedir.jpg" alt="" />
    </a>
</div>
<br><br>

<div>
    <p>
        <h2>Model Nedir?</h2>
        Model, MVC'de projenin iş mantığının (business logic) oluşturduğu bölümdür. İş mantığıyla beraber doğrulama (validation) ve veri erişim (data access) işlemleri de bu bölümde gerçekleştirilmektedir.
        Model tek katmandan oluşabileceği gibi kendi içinde birden fazla katmandan da oluşabilir. İç yapılandırma projenin büyüklüğü ile yazılım geliştiricinin planlamasına kalmış bir durumdur.
        Eğer proje büyük çaplı ise modeli birden çok katmana ayırmak projenin yönetimi açısından faydalı olacaktır.
    </p>
    <br>
    <p>
        <h2>View Nedir?</h2>
        View, MVC'de projenin arayüzlerinin oluşturduğu bölümdür. Bu bölümde projenin kullanıcılara sunulacak olan HTML dosyaları yer almaktadır. Projenin geliştirildiği yazılım dilleri göre dosya uzantıları da değişebilmektedir. Projelerin büyüklüğüne göre dikkat edilmesi gereken bir nokta ise, klasörlemedir.
        <br>
        Eğer bir web projesi geliştiriyorsanız, projenin View'larının yer aldığı klasörlerinin hiyerarşisi, ilerleyen dönemlerde karmaşıklığa sebep olmaması için dikkatli yapılmalıdır. Kimi yazılım geliştiriciler web projelerinde HTML dosyaları ile Javascript, CSS ve resim dosyalarını aynı klasör içinde barındırmaktadır. Ufak bir ayrıntı gibi görünse de projenin ilerleyen dönemlerinde ciddi problemler oluşturmaktadır. View'ın bir görevi de, kullanıcılardan alınan istekleri controller'a iletmektir.
    </p>
    <br>
    <p>
        <h2>Controller Nedir?</h2>
        Controller, MVC'de projenin iç süreçlerini kontol eden bölümdür. Bu bölümde View ile Model arasında bağlantı kurulur. Kullanıcılardan gelen istekler (request) Controller'larda değerlendirilir, isteğin detayına göre hangi işlemlerin yapılacağı ve kullanıcıya hangi View'ın döneceği (response) belirtilir.
    </p>
</div>
<br>

<div style="text-align : center">
    <a>
        <img src="/css/asp_net_mvc_3_razor_life_cycyle_yasam_dongusu.jpg" alt="" />
        <br><br>
        <img style="font-weight : 200; height : 470px;" src="/css/mvc yaşam döngüsü.png" alt="" />
    </a>
    <br><br>
</div>